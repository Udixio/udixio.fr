---
import Footer from "./Footer.astro";
import "../styles/base.scss";
import Header from "@layouts/Header.astro";
import {Cursor} from "@components/Cursor";
import {SEO} from "astro-seo";
import {getImage} from "astro:assets";
export type TwitterCardType = "summary" | "summary_large_image" | "app" | "player";
import "@fontsource/roboto/400.css";
import "@fontsource/roboto/500.css";
import "@fontsource/montserrat/700.css";
import "@fontsource/montserrat/600.css";
import defaultImage from "@assets/images/img.png";
import {ClientRouter} from 'astro:transitions';
import {SmoothScroll} from "@udixio/ui";

import {BackgroundColor} from "@components/three/BackgroundColor";

export interface Link extends HTMLLinkElement {
    prefetch: boolean;
    crossorigin: string;
}

const currentPath = Astro.url.pathname
const domain = Astro.url.origin;

const imageDefault = await getImage({src: defaultImage, format: "png"})

export interface Meta extends HTMLMetaElement {
    property: string;
}
export interface SEOProps {
    title?: string;
    titleTemplate?: string;
    titleDefault?: string;
    charset?: string;
    description?: string;
    canonical?: URL | string;
    nofollow?: boolean;
    noindex?: boolean;
    languageAlternates?: {
        href: URL | string;
        hrefLang: string;
    }[];
    openGraph?: {
        basic: {
            title: string;
            type: string;
            image: string;
            url?: URL | string;
        };
        optional?: {
            audio?: string;
            description?: string;
            determiner?: string;
            locale?: string;
            localeAlternate?: string[];
            siteName?: string;
            video?: string;
        };
        image?: {
            url?: URL | string;
            secureUrl?: URL | string;
            type?: string;
            width?: number;
            height?: number;
            alt?: string;
        };
        article?: {
            publishedTime?: string;
            modifiedTime?: string;
            expirationTime?: string;
            authors?: string[];
            section?: string;
            tags?: string[];
        };
    };
    twitter?: {
        card?: TwitterCardType;
        site?: string;
        creator?: string;
        title?: string;
        description?: string;
        image?: URL | string;
        imageAlt?: string;
    };
    extend?: {
        link?: Partial<Link>[];
        meta?: Partial<Meta>[];
    };
    surpressWarnings?: boolean;
}

interface Props {
    seo: SEOProps;
    hiddenFooter: boolean;
    hiddenMenu: boolean;
}

const {seo, hiddenFooter = false, hiddenMenu = false}: Props = Astro.props;

// const currentPath = Astro.url.pathname.replace("/fr", "");
// const domain = Astro.url.origin;


const titleDefault = `Joël Vigreux - Développeur Full-Stack`;
const canonical = domain + currentPath
const seoDefault: SEOProps = {
    titleDefault: titleDefault,
    ...seo,
    canonical: canonical.endsWith('/') ? canonical.substr(0, canonical.length - 1) : canonical,
    openGraph: {
        ...seo?.openGraph,
        basic: {
            title: seo?.openGraph?.basic.title ?? seo?.title ?? titleDefault,
            type: "website",
            image: domain + imageDefault.src,
            url: domain + currentPath,
            ...seo?.openGraph?.basic
        },
        optional: {
            description: seo?.openGraph?.optional?.description ?? seo?.description,
            ...seo?.openGraph?.optional
        }
    },
    twitter: {
        title: seo?.twitter?.title ?? seo?.title ?? titleDefault,
        image: domain + imageDefault.src,
        description: seo?.twitter?.description ?? seo?.description,
        ...seo?.twitter
    }

};
---
<!DOCTYPE html>
<html class="dark-mode" lang="fr">
<head>
    <meta charset="UTF-8"/>
    <meta name="viewport" content="width=device-width"/>
    <link rel="icon" type="image/png" href="/favicon.svg"/>


    <SEO {...seoDefault}/>
    <ClientRouter/>
</head>
<body class="bg-surface  transition-all duration-500">
<Header/>

<!--<SmoothScroll-->
<!--        orientation={'vertical'}-->
<!--        client:load-->
<!--        transition=".75s"-->

<!--&gt;-->


<main>

    <BackgroundColor size="80%" className="fixed -z-30  top-0 h-screen w-screen opacity-40"
                     transition:name="background-color"
                     transition:persist client:only="react"/>

    <div class="-z-10 h-[75vh] w-full absolute top-0 bg-gradient-to-b from-surface via-surface-60 to-transparent"/>
    <slot/>

</main>
<Footer/>
<!--</SmoothScroll>-->


<!--<script>-->

<!--    import AOS from 'aos'-->

<!--    document.addEventListener('astro:page-load', () => {-->
<!--        AOS.init()-->
<!--    })-->
<!--</script>-->
</body>
</html>
